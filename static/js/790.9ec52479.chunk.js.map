{"version":3,"file":"static/js/790.9ec52479.chunk.js","mappings":"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","sources":["components/LoginPage/LoginStyles.styled.jsx","redux/contacts/selectors.js","components/ContactsPage/ContactsStyles.styled.jsx","components/ContactsPage/ContactsPage.jsx","components/pages/Contacts.jsx"],"sourcesContent":["import { Input, Button } from 'antd';\nimport styled from '@emotion/styled';\n\nconst TitlePage = styled.h2`\n  font-size: 35px;\n  color: #fff;\n  background-color: #838383;\n  border-radius: 5px;\n  padding: 10px 30px;\n  width: 450px;\n  text-align: center;\n`;\n\nconst GeneralInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FormLogin = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n`;\n\nconst InputPassword = styled(Input.Password)`\n  width: 100%;\n  max-width: 500px;\n  color: #fff;\n  line-height: calc(18 / 14);\n  height: 50px;\n  margin-bottom: 10px;\n  background-color: transparent !important;\n  box-shadow: 0;\n\n  &:hover,\n  &:focus,\n  &:focus-within {\n    background-color: transparent !important;\n    border-color: #959583 !important;\n  }\n\n  .anticon {\n    color: #959583 !important;\n    padding: 15px;\n\n    &:hover,\n    &:focus,\n    &:focus-within {\n      color: black !important;\n    }\n  }\n`;\nconst InputInfo = styled(Input)`\n  width: 100%;\n  max-width: 500px;\n  color: #000;\n  line-height: calc(18 / 14);\n  height: 50px;\n  margin-bottom: 10px;\n  background-color: transparent !important;\n  box-shadow: 0;\n\n  &:hover,\n  &:focus,\n  &:focus-within {\n    background-color: transparent !important;\n    border-color: #959583 !important;\n  }\n\n  .ant-input {\n    &::placeholder {\n      color: red !important;\n      font-size: 18px;\n      background-color: transparent !important;\n    }\n  }\n`;\n\nconst BtnAuth = styled(Button)`\n  width: 190px;\n  height: 45px;\n  margin-top: 10px;\n  background-color: #7c7c6a;\n  font-size: 20px;\n  color: #fff !important;\n\n  &:hover,\n  &:focus {\n    background-color: #959583 !important;\n  }\n`;\nexport { InputPassword, InputInfo, TitlePage, GeneralInfo, BtnAuth, FormLogin };\n","export const selectContacts = state => state.contacts.items;","import styled from '@emotion/styled';\nimport { ListItem, ListItemText } from '@mui/material';\nimport { DeleteFilled } from '@ant-design/icons';\nimport { BtnAuth } from 'components/LoginPage/LoginStyles.styled';\n\nconst General = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BtnCreateContact = styled(BtnAuth)`\n  margin-bottom: 20px;\n`;\n\nconst ListData = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n  flex-direction: column;\n`;\n\nconst ListItems = styled(ListItem)`\n  width: 500px;\n  display: flex;\n  justify-content: space-between;\n  overflow-wrap: break-word;\n`;\nconst ListItemTextNumber = styled(ListItemText)`\n  width: 200px;\n  text-align: center;\n  margin-right: 50px;\n`;\n\nconst ListItemTextName = styled(ListItemText)`\n  width: 50px;\n  text-align: center;\n  margin-right: 50px;\n`;\n\nconst IconDelet = styled(DeleteFilled)`\n  color: #7c7c6a;\n  transition: color 0.9s;\n  &:hover,\n  &:focus {\n    color: #4e4b4b;\n  }\n`;\n\nexport {\n  General,\n  BtnCreateContact,\n  IconDelet,\n  ListData,\n  ListItems,\n  ListItemTextNumber,\n  ListItemTextName,\n};\n","import { useEffect, useState } from 'react';\nimport { List, ListItemSecondaryAction } from '@mui/material';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  addContacts,\n  deleteContacts,\n  getAllContacts,\n} from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/auth/selectors';\n\nimport {\n  BtnCreateContact,\n  General,\n  ListItemTextName,\n  ListItemTextNumber,\n  ListItems,\n} from './ContactsStyles.styled';\nimport { InputInfo, TitlePage } from '../LoginPage/LoginStyles.styled';\nimport { message } from 'antd';\nimport { IconDelet } from './ContactsStyles.styled';\n\nconst ContactsUser = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const [newContact, setNewContact] = useState({ name: '', number: '' });\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleCreateContact = async () => {\n    const { name, number } = newContact;\n    const nameExists = contacts.some(contact => contact.name === name);\n    const numberExists = contacts.some(contact => contact.number === number);\n\n    if (nameExists || numberExists) {\n      message.warning(\n        `${name} or entered ${number} number is already in contacts.`\n      );\n\n      return;\n    }\n    dispatch(addContacts(newContact));\n    setNewContact({ name: '', number: '' });\n    message.success('Contact added!');\n  };\n\n  const filteredContacts = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleDeleteContact = async id => {\n    dispatch(deleteContacts(id));\n    message.success('Contact removed!');\n  };\n\n  return (\n    <General>\n      <TitlePage>Contacts</TitlePage>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <InputInfo\n            placeholder=\"Name\"\n            type=\"text\"\n            value={newContact.name}\n            onChange={e =>\n              setNewContact({ ...newContact, name: e.target.value })\n            }\n          />\n          <InputInfo\n            type=\"tel\"\n            placeholder=\"Number\"\n            value={newContact.number}\n            onChange={e =>\n              setNewContact({ ...newContact, number: e.target.value })\n            }\n          />\n          <BtnCreateContact\n            type=\"primary\"\n            htmlType=\"submit\"\n            onClick={handleCreateContact}\n          >\n            Create Contact\n          </BtnCreateContact>\n          <InputInfo\n            type=\"text\"\n            placeholder=\"Search Contacts\"\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n          />\n          <List>\n            {filteredContacts?.map(contact => (\n              <ListItems key={contact.id}>\n                <ListItemTextName primary={contact.name} />\n\n                <ListItemTextNumber primary={contact.number} />\n                <ListItemSecondaryAction>\n                  <IconDelet onClick={() => handleDeleteContact(contact.id)} />\n                </ListItemSecondaryAction>\n              </ListItems>\n            ))}\n          </List>\n        </>\n      )}\n    </General>\n  );\n};\n\nexport default ContactsUser;\n","import ContactsUser from 'components/ContactsPage/ContactsPage';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactsUser />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["TitlePage","styled","GeneralInfo","FormLogin","InputPassword","Input","InputInfo","BtnAuth","Button","selectContacts","state","contacts","items","General","BtnCreateContact","ListItems","ListItem","ListItemTextNumber","ListItemText","ListItemTextName","IconDelet","DeleteFilled","dispatch","useDispatch","useSelector","isLoading","selectIsLoading","useEffect","getAllContacts","useState","name","number","newContact","setNewContact","searchQuery","setSearchQuery","handleCreateContact","nameExists","some","contact","numberExists","message","addContacts","filteredContacts","filter","toLowerCase","includes","handleDeleteContact","id","deleteContacts","Loader","placeholder","type","value","onChange","e","target","htmlType","onClick","List","map","primary","ListItemSecondaryAction"],"sourceRoot":""}