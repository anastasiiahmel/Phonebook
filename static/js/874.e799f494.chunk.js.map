{"version":3,"file":"static/js/874.e799f494.chunk.js","mappings":"2TAGMA,EAAYC,EAAAA,EAAAA,GAAH,gLAUTC,EAAcD,EAAAA,EAAAA,IAAH,yHAOXE,EAAYF,EAAAA,EAAAA,KAAH,0IAQTG,GAAgBH,EAAAA,EAAAA,GAAOI,EAAAA,EAAAA,SAAPJ,CAAH,igBA4BbK,GAAYL,EAAAA,EAAAA,GAAOI,EAAAA,EAAPJ,CAAH,wfA0BTM,GAAUN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,sO,iNCNb,EAlEkB,WAChB,IAAMQ,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/B,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAiBC,EAAjB,MAKAC,EAAAA,EAAAA,YAAU,WACRR,GAAcF,EAAS,YACxB,GAAE,CAACE,EAAYF,IAIhB,IAAMW,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdN,GAAY,SAAAO,GAAS,yBAChBA,GADgB,cAElBF,EAAOC,GAFW,GAItB,EAEKE,EAAY,mCAAG,WAAOL,GAAP,uEACnBA,EAAEM,iBACIC,EAAW,CACfb,MAAOE,EAASF,MAChBC,SAAUC,EAASD,UAGrBT,GAASsB,EAAAA,EAAAA,IAAUD,IAClBE,MAAK,WACJC,EAAAA,GAAAA,QAAgB,iBACjB,IAAEC,OAAM,SAACX,GACRU,EAAAA,GAAAA,MAAc,wCACjB,IAZoB,2CAAH,sDAelB,OACE,UAAC,KAAD,YACE,SAAC,KAAD,8BACE,UAAC,KAAD,CAAWE,SAAUP,EAArB,WACE,SAAC,KAAD,CACEQ,YAAY,QACZC,KAAK,QACLZ,KAAK,QACLC,MAAOP,EAASF,MAChBqB,SAAUhB,KAEZ,SAAC,KAAD,CACEc,YAAY,WACZG,GAAG,WACHd,KAAK,WACLY,KAAK,WACLX,MAAOP,EAASD,SAChBoB,SAAUhB,EACVkB,QAAQ,cAEV,SAAC,KAAD,CAASH,KAAK,UAAUI,SAAS,SAAjC,0BAMT,E,SCzDD,EAVc,WACZ,IAAMC,GAAY5B,EAAAA,EAAAA,IAAY6B,EAAAA,IAE9B,OACE,8BACGD,GAAY,SAACE,EAAA,EAAD,KAAa,SAAC,EAAD,KAG/B,C","sources":["components/LoginPage/LoginStyles.styled.jsx","components/LoginPage/LoginPage.jsx","components/pages/Login.jsx"],"sourcesContent":["import { Input, Button } from 'antd';\nimport styled from '@emotion/styled';\n\nconst TitlePage = styled.h2`\n  font-size: 35px;\n  color: #fff;\n  background-color: #838383;\n  border-radius: 5px;\n  padding: 10px 30px;\n  width: 450px;\n  text-align: center;\n`;\n\nconst GeneralInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FormLogin = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 500px;\n`;\n\nconst InputPassword = styled(Input.Password)`\n  width: 100%;\n  max-width: 500px;\n  color: #fff;\n  line-height: calc(18 / 14);\n  height: 50px;\n  margin-bottom: 10px;\n  background-color: transparent !important;\n  box-shadow: 0;\n\n  &:hover,\n  &:focus,\n  &:focus-within {\n    background-color: transparent !important;\n    border-color: #959583 !important;\n  }\n\n  .anticon {\n    color: #959583 !important;\n    padding: 15px;\n\n    &:hover,\n    &:focus,\n    &:focus-within {\n      color: black !important;\n    }\n  }\n`;\nconst InputInfo = styled(Input)`\n  width: 100%;\n  max-width: 500px;\n  color: #000;\n  line-height: calc(18 / 14);\n  height: 50px;\n  margin-bottom: 10px;\n  background-color: transparent !important;\n  box-shadow: 0;\n\n  &:hover,\n  &:focus,\n  &:focus-within {\n    background-color: transparent !important;\n    border-color: #959583 !important;\n  }\n\n  .ant-input {\n    &::placeholder {\n      color: red !important;\n      font-size: 18px;\n      background-color: transparent !important;\n    }\n  }\n`;\n\nconst BtnAuth = styled(Button)`\n  width: 190px;\n  height: 45px;\n  margin-top: 10px;\n  background-color: #7c7c6a;\n  font-size: 20px;\n  color: #fff !important;\n\n  &:hover,\n  &:focus {\n    background-color: #959583 !important;\n  }\n`;\nexport { InputPassword, InputInfo, TitlePage, GeneralInfo, BtnAuth, FormLogin };\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { message } from 'antd';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {selectLogIn } from 'redux/auth/selectors';\nimport { loginUser } from 'redux/auth/operations';\nimport { BtnAuth, FormLogin, GeneralInfo, InputInfo, InputPassword, TitlePage } from './LoginStyles.styled';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectLogIn);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  \n  useEffect(() => {\n    isLoggedIn && navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const dataUser = {\n      email: formData.email,\n      password: formData.password,\n    };\n\n    dispatch(loginUser(dataUser))\n    .then(() => {  \n      message.success('Login success!');\n    }).catch((e) => {\n      message.error('Login error, Email or Password wrong!');\n  });\n  };\n\n  return (\n    <GeneralInfo>\n      <TitlePage >Authentication</TitlePage>\n        <FormLogin onSubmit={handleSubmit}>\n          <InputInfo\n            placeholder=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n          <InputPassword\n            placeholder=\"Password\"\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            variant=\"outlined\"\n          />\n          <BtnAuth type=\"primary\" htmlType=\"submit\">\n            Sign in\n          </BtnAuth>\n        </FormLogin>\n    </GeneralInfo>\n  );\n};\n\nexport default LoginPage;\n","import { useSelector } from 'react-redux';\n\nimport { selectIsLoading } from 'redux/auth/selectors';\nimport LoginPage from 'components/LoginPage/LoginPage';\n\nimport { Loader } from 'components/Loader/Loader';\n\nconst Login = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {isLoading ? <Loader /> : <LoginPage />}\n    </>\n  );\n};\n\nexport default Login;"],"names":["TitlePage","styled","GeneralInfo","FormLogin","InputPassword","Input","InputInfo","BtnAuth","Button","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","selectLogIn","useState","email","password","formData","setFormData","useEffect","handleChange","e","target","name","value","prevState","handleSubmit","preventDefault","dataUser","loginUser","then","message","catch","onSubmit","placeholder","type","onChange","id","variant","htmlType","isLoading","selectIsLoading","Loader"],"sourceRoot":""}